// Part of the fun of generating objects
// through a grammar is that the grammar
// can be parameterised.  i.e. you can
// change the height etc.  just by
// changing the number.  You can also
// use the `rand` function to generate
// random number, meaning each time the
// grammar is processed, the result will
// differ.
//
// You can also have "stochastic rules",
// where the rule has multiple bodies,
// and which one to execute is picking
// according to the given percentages
//
// Below we make a red pyramid 50% of
// the time or a flat yellow roof the
// rest of the time.
//
// That's it! Scroll down for a link to
// the CGA reference, and more
// information, and if you make
// something cool, make sure you let me
// know on twitter: @gromgull

Lot --> extrude(rand(1,3)) comp(f) { side: Side | top: Top }

Side --> split(y) { ~0.1 : Floor }*

Floor --> color(rand(32,255), rand(32,255), rand(32,255))

Top -->
  50%: taper(1) color("red")
  else: extrude(0.2) color("yellow")
